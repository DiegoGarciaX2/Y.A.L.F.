#include <Wire.h>
#define uchar unsigned char
const int C1d=7;
const int C1i=2;
uchar t;
//void send_data(short a1,short b1,short c1,short d1,short e1,short f1);
uchar data[16];
void setup()
{
  Wire.begin();        // join i2c bus (address optional for master)
  Serial.begin(9600);  // start serial for output
  t = 0;
  pinMode(C1d,OUTPUT);
  pinMode(C1i,OUTPUT);
}
void loop()
{
  int motor_d;
  int motor_i;
  int angulo;
  int valor;
  int k;
  int in = k;
  int sensor[8];
  int x=0;
  Wire.requestFrom(9, 16);    // request 16 bytes from slave device #9
  while (Wire.available())   // slave may send less than requested
  {
    data[t] = Wire.read(); // receive a byte as character
    data[t]=(data[t]>70)?1:0;
    if(t%2==0){
      sensor[x]=data[t];
      x++;
    }
    if (t < 15){
      t++;
    }
    else{
      t = 0;
      x = 0;
    }
  }
  Serial.print("Sensor: ");
  for(x=0; x<8; x++){
    Serial.print(" ");
    Serial.print(sensor[x]);
  }
  Serial.println();
  k=kvalue(sensor);
  Serial.print("k:");
  Serial.print(k);
  Serial.println();
  delay(20);
  int di = valdi(k,in);
  int kf = diV(k,in,di);
  valor = velocidad(k,in);
  angulo = angle(k,in);
  if(angulo==0){
    motor_d=254-valor;
    motor_i=254-valor;
  }else if(angulo<0){
    motor_i=(254/(k-in))-valor;
    motor_d=(254/(k-in))-valor-((angulo*254)/90);
  }else if(angulo>0){
    motor_d=(254/(k-in))-valor;
    motor_i=(254/(k-in))-valor-((angulo*254)/90);
    digitalWrite(C1d, motor_d);
    digitalWrite(C1i, motor_i);
  }
}

int kvalue(int sensor[]){
  int control=0;
  int k=0;
  for(int x=0; x<=3 && control==0; x++){
    if(sensor[x]==0){
      control=1;
      k=x-3;
    }
  }
  for(int x=7; x>=4 && control==0; x--){
    if(sensor[x]==0){
      control=1;
      k=x-4;
    }
  }
  return k;
}
int diV(int k, int in, int di){
  int ret;
  ret == k+in+di;
  return ret;
}
int valdi(int k, int in){
  int loquesea;
  loquesea=(k*(in^3))/(in^4);
  return loquesea;
}
int velocidad(int k, int in){
  int vuelta;
  vuelta=254/(k-in);
  return vuelta;
}
int angle(int k, int in){
  int buff;
  buff=30*k+ 30*(k-in);
  return buff;
}
